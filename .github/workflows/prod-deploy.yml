name: Prod Deploy

on:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout кода
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Настройка Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Создание config.js
      - name: Copy config.js.example to config.js
        run: cp src/config.js.example src/config.js

      # 4. Настройка локального кеша Docker
      - name: Restore Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: "${{ runner.os }}-docker-${{ hashFiles('_docker/prod/Dockerfile') }}"
          restore-keys: |
            ${{ runner.os }}-docker-

      # 5. Сборка Docker-образа с локальным кешем
      - name: Build Docker Image with Local Cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: _docker/prod/Dockerfile
          tags: ast-front-prod:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: false

      # 6. Поднятие контейнера
      - name: Set up Docker Compose
        run: |
          docker compose -f docker-compose-prod.yml up -d

      - name: Stop Docker Compose
        run: docker compose down

  deploy:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout кода
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Установка sshpass
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      # 3. Деплой на сервер через SSH с паролем
      - name: Deploy to Server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S bash -c '
            cd ${{ secrets.PROJECT_PATH }}
            make deploy
            '
          EOF